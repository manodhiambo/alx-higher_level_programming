====================================
 Doctest for lazy_matrix_mul function
====================================


``lazy_matrix_mul(m_a, m_b)`` returns a list of lists result of the dot
multiplication of two matrices

Import function
=================

    >>> matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

Valid matrices different sizes
===============================

Integers

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
    array([[ 58,  64],
           [139, 154]])

    >>> matrix_mul([[2, 0], [1, 2]], [[1, 2], [8, 21]])
    array([[ 2,  4],
           [17, 44]])

    >>> matrix_mul([[1, 0, 0], [0, 1, 0], [0, 0, 1]], [[1], [2], [3]])
    array([[1],
           [2],
           [3]])

    >>> matrix_mul([[0]], [[1]])
    array([[0]])

Negatives

    >>> matrix_mul([[-1, 2, -3]], [[4], [-5], [6]])
    array([[-32]])


Floats

    >>> matrix_mul([[2, 0.4], [1, 2.6]], [[1, 2.2], [3, 4]])
    array([[ 3.2,  6. ],
           [ 8.8, 12.6]])

    >>> matrix_mul([[-2.0]], [[4.0]])
    array([[-8.]])

Mixed

    >>> matrix_mul([[3, -4, 2.5]], [[1.3, 9, -7, 1.45], [8, -7, 4, 6.1], [6, 4.8, 0.01, 3]])
    array([[-13.1  ,  67.   , -36.975, -12.55 ]])


Arguments not a list
=====================

Tuple

    >>> matrix_mul((1, 2), [[1]])
    Traceback (most recent call last):
              ...
    ValueError: shapes (2,) and (1,1) not aligned: 2 (dim 0) != 1 (dim 0)

    >>> matrix_mul([[1]], (1, 2))
    Traceback (most recent call last):
              ...
    ValueError: shapes (1,1) and (2,) not aligned: 1 (dim 1) != 2 (dim 0)

Set

    >>> matrix_mul({1, 2}, [[1]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1]], {1, 2})
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

Dictionary

    >>> matrix_mul({1: 2}, [[1]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1]], {1: 2})
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

String

    >>> matrix_mul("2, 3", [[1]])
    Traceback (most recent call last):
              ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> matrix_mul([[1]], "2, 3")
    Traceback (most recent call last):
              ...
    ValueError: Scalar operands are not allowed, use '*' instead

None

    >>> matrix_mul(None, [[1]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1]], None)
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported


Arguments not a list of lists
===============================

Tuple

    >>> matrix_mul([(1, 2), [2]], [[1]])
    Traceback (most recent call last):
              ...
    ValueError: setting an array element with a sequence.

    >>> matrix_mul([[1]], [(1, 2), [2]])
    Traceback (most recent call last):
              ...
    ValueError: setting an array element with a sequence.


Set

    >>> matrix_mul([{1, 2}], [[1]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1]], [{1, 2}])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

Dictionary

    >>> matrix_mul([{1: 2}], [[1]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1]], [{1: 2}])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

String

    >>> matrix_mul(["2, 3"], [[1]])
    Traceback (most recent call last):
              ...
    TypeError: invalid data type for einsum

    >>> matrix_mul([[1]], ["2, 3"])
    Traceback (most recent call last):
              ...
    TypeError: invalid data type for einsum

None

    >>> matrix_mul([None], [[1]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1]], [None])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported


Empty List or Empty List of Lists
===================================

Empty List

   >>> matrix_mul([], [[1, 2]])
   Traceback (most recent call last):
             ...
   ValueError: shapes (0,) and (1,2) not aligned: 0 (dim 0) != 1 (dim 0)


   >>> matrix_mul([[1, 2]], [])
   Traceback (most recent call last):
             ...
   ValueError: shapes (1,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

Empty List of Lists

   >>> matrix_mul([[]], [[1, 2]])
   Traceback (most recent call last):
             ...
   ValueError: shapes (1,0) and (1,2) not aligned: 0 (dim 1) != 1 (dim 0)

   >>> matrix_mul([[1, 2]], [[]])
   Traceback (most recent call last):
             ...
   ValueError: shapes (1,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)


List inside List contains types not float or int
=================================================

Tuple

    >>> matrix_mul([[1, 2], [3, (4, 2)]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
              ...
    ValueError: setting an array element with a sequence.

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, (4, 2)]])
    Traceback (most recent call last):
              ...
    ValueError: setting an array element with a sequence.


String

    >>> matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, 4]])
    Traceback (most recent call last):
              ...
    TypeError: invalid data type for einsum

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, '4']])
    Traceback (most recent call last):
              ...
    TypeError: invalid data type for einsum

Set

    >>> matrix_mul([[1, 2], [3, {4, 2}]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, {4, 2}]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

Dictionary


    >>> matrix_mul([[1, 2], [3, {4: 2}]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, {4: 2}]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

None

    >>> matrix_mul([[1, 2], [3, None]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, None]])
    Traceback (most recent call last):
              ...
    TypeError: Object arrays are not currently supported


Not square matrices
====================


   >>> matrix_mul([[1], [1, 2]], [[1]])
   Traceback (most recent call last):
             ...
   ValueError: setting an array element with a sequence.


   >>> matrix_mul([[1]], [[1], [1, 2]])
   Traceback (most recent call last):
             ...
   ValueError: setting an array element with a sequence.


   >>> matrix_mul([[], [1, 2]], [[1]])
   Traceback (most recent call last):
             ...
   ValueError: setting an array element with a sequence.


   >>> matrix_mul([[1]], [[1], []])
   Traceback (most recent call last):
             ...
   ValueError: setting an array element with a sequence.




Columns of m_a != rows of m_b
==============================


   >>> matrix_mul([[1]], [[1, 2], [1, 2]])
   Traceback (most recent call last):
             ...
   ValueError: shapes (1,1) and (2,2) not aligned: 1 (dim 1) != 2 (dim 0)


   >>> matrix_mul([[1, 2], [1, 2]], [[1]])
   Traceback (most recent call last):
             ...
   ValueError: shapes (2,2) and (1,1) not aligned: 2 (dim 1) != 1 (dim 0)


No Arguments Given
===================

Missing 1 argument

   >>> matrix_mul([[1]])
   Traceback (most recent call last):
             ...
   TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

Missing 2 arguments


   >>> matrix_mul()
   Traceback (most recent call last):
             ...
   TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
